package com.afsal.dev.filimapp.viewModelimport android.util.Logimport androidx.lifecycle.LiveDataimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.ViewModelimport androidx.lifecycle.viewModelScopeimport com.afsal.dev.filimapp.models.CategoryDataimport com.afsal.dev.filimapp.models.MoviesDataimport com.afsal.dev.filimapp.network.Resourceimport com.afsal.dev.filimapp.repository.MoviesRepositoryimport dagger.hilt.android.lifecycle.HiltViewModelimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.launchimport retrofit2.Responseimport javax.inject.Inject@HiltViewModelclass MoviesViewModel @Inject constructor (private val repository: MoviesRepository):ViewModel() {    private val _categoryList=MutableLiveData<Resource<Response<CategoryData>>>()             val categoryList:LiveData<Resource<Response<CategoryData>>> get() =  _categoryList    private val _movieListData=MutableLiveData<Resource<Response<MoviesData>>>()         val moviesListData:LiveData<Resource<Response<MoviesData>>> get() = _movieListData    init {          getAllData()    }    private fun getAllData(){           viewModelScope.launch(Dispatchers.IO) {                 val categories=repository.getAllCategories()//               Log.d("TTT","responceCode ${categories.code()}")//               Log.d("TTT","response  ${categories.message()}")                    // _categoryList.postValue(categories)//                            launch {//                                val result=  repository.getMoviesList()////                                Log.d("TTT","movies list ${result.toString()}")//                                _movieListData.postValue(result)////                            }           }    }}